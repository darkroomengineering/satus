/*
 * THIS FILE IS GENERATED BY setup-styles.ts
 * DO NOT EDIT IT DIRECTLY.
 */

/** Custom theme **/
@theme {
	--breakpoint-*: initial;
	--breakpoint-dt: 800px;

  --color-*: initial;
	--color-primary: #ffffff;
	--color-secondary: #000000;
	--color-contrast: #e30613;
  --color-black: #000000;
	--color-white: #ffffff;
	--color-red: #e30613;
    
  --spacing: 0.25rem;
	--spacing-page: var(--space);
	--spacing-gap: var(--gap);

  --font-*: initial;
  --font-mono: var(--font-mono);
}

/** Custom theme overwrites **/
[data-theme=light] {
  --color-primary: #ffffff;
	--color-secondary: #000000;
	--color-contrast: #e30613;
}
[data-theme=dark] {
  --color-primary: #000000;
	--color-secondary: #ffffff;
	--color-contrast: #e30613;
}
[data-theme=red] {
  --color-primary: #e30613;
	--color-secondary: #000000;
	--color-contrast: #ffffff;
}
  

/** Custom static utilities **/
@utility test-mono {
  font-family: --font-mono;
	font-style: normal;
	font-weight: 400;
	line-height: 90%;
	letter-spacing: 0;
	@apply stext-20;
}

@utility design-grid {
	display: grid;
	grid-template-columns: repeat(var(--columns), 1fr);
	gap: var(--gap);
}

@utility layout-block {
	margin-inline: auto;
	width: calc(100% - 2 * var(--space));
}

@utility layout-block-inner {
	padding-inline: var(--space);
	width: 100%;
}

@utility layout-grid {
	@apply layout-block design-grid;
}

@utility layout-grid-inner {
	@apply layout-block-inner design-grid;
}

/** Custom variants **/
@custom-variant light (&:where([data-theme=light], [data-theme=light *]));
@custom-variant dark (&:where([data-theme=dark], [data-theme=dark *]));
@custom-variant red (&:where([data-theme=red], [data-theme=red *]));

/** Custom function utilities **/
@utility stext-* {
	font-size: calc((--value(integer) * 100) / var(--device-width) * 1vw);
}
@utility -stext-* {
	font-size: calc((--value(integer) * -1 * 100) / var(--device-width) * 1vw);
}

@utility stracking-* {
	letter-spacing: calc((--value(integer) * 100) / var(--device-width) * 1vw);
}
@utility -stracking-* {
	letter-spacing: calc((--value(integer) * -1 * 100) / var(--device-width) * 1vw);
}

@utility sleading-* {
	line-height: calc((--value(integer) * 100) / var(--device-width) * 1vw);
}
@utility -sleading-* {
	line-height: calc((--value(integer) * -1 * 100) / var(--device-width) * 1vw);
}

@utility sborder-* {
	border-width: calc((--value(integer) * 100) / var(--device-width) * 1vw);
}
@utility -sborder-* {
	border-width: calc((--value(integer) * -1 * 100) / var(--device-width) * 1vw);
}

@utility sborder-t-* {
	border-top-width: calc((--value(integer) * 100) / var(--device-width) * 1vw);
}
@utility -sborder-t-* {
	border-top-width: calc((--value(integer) * -1 * 100) / var(--device-width) * 1vw);
}

@utility sborder-r-* {
	border-right-width: calc((--value(integer) * 100) / var(--device-width) * 1vw);
}
@utility -sborder-r-* {
	border-right-width: calc((--value(integer) * -1 * 100) / var(--device-width) * 1vw);
}

@utility sborder-b-* {
	border-bottom-width: calc((--value(integer) * 100) / var(--device-width) * 1vw);
}
@utility -sborder-b-* {
	border-bottom-width: calc((--value(integer) * -1 * 100) / var(--device-width) * 1vw);
}

@utility sborder-l-* {
	border-left-width: calc((--value(integer) * 100) / var(--device-width) * 1vw);
}
@utility -sborder-l-* {
	border-left-width: calc((--value(integer) * -1 * 100) / var(--device-width) * 1vw);
}

@utility srounded-* {
	border-radius: calc((--value(integer) * 100) / var(--device-width) * 1vw);
}
@utility -srounded-* {
	border-radius: calc((--value(integer) * -1 * 100) / var(--device-width) * 1vw);
}

@utility srounded-t-* {
	border-top-left-radius: calc((--value(integer) * 100) / var(--device-width) * 1vw);
border-top-right-radius: calc((--value(integer) * 100) / var(--device-width) * 1vw);
}
@utility -srounded-t-* {
	border-top-left-radius: calc((--value(integer) * -1 * 100) / var(--device-width) * 1vw);
border-top-right-radius: calc((--value(integer) * 100) / var(--device-width) * 1vw);
}

@utility srounded-r-* {
	border-top-right-radius: calc((--value(integer) * 100) / var(--device-width) * 1vw);
border-bottom-right-radius: calc((--value(integer) * 100) / var(--device-width) * 1vw);
}
@utility -srounded-r-* {
	border-top-right-radius: calc((--value(integer) * -1 * 100) / var(--device-width) * 1vw);
border-bottom-right-radius: calc((--value(integer) * 100) / var(--device-width) * 1vw);
}

@utility srounded-b-* {
	border-bottom-right-radius: calc((--value(integer) * 100) / var(--device-width) * 1vw);
border-bottom-left-radius: calc((--value(integer) * 100) / var(--device-width) * 1vw);
}
@utility -srounded-b-* {
	border-bottom-right-radius: calc((--value(integer) * -1 * 100) / var(--device-width) * 1vw);
border-bottom-left-radius: calc((--value(integer) * 100) / var(--device-width) * 1vw);
}

@utility srounded-l-* {
	border-bottom-left-radius: calc((--value(integer) * 100) / var(--device-width) * 1vw);
border-top-left-radius: calc((--value(integer) * 100) / var(--device-width) * 1vw);
}
@utility -srounded-l-* {
	border-bottom-left-radius: calc((--value(integer) * -1 * 100) / var(--device-width) * 1vw);
border-top-left-radius: calc((--value(integer) * 100) / var(--device-width) * 1vw);
}

@utility srounded-tl-* {
	border-top-left-radius: calc((--value(integer) * 100) / var(--device-width) * 1vw);
}
@utility -srounded-tl-* {
	border-top-left-radius: calc((--value(integer) * -1 * 100) / var(--device-width) * 1vw);
}

@utility srounded-tr-* {
	border-top-right-radius: calc((--value(integer) * 100) / var(--device-width) * 1vw);
}
@utility -srounded-tr-* {
	border-top-right-radius: calc((--value(integer) * -1 * 100) / var(--device-width) * 1vw);
}

@utility srounded-br-* {
	border-bottom-right-radius: calc((--value(integer) * 100) / var(--device-width) * 1vw);
}
@utility -srounded-br-* {
	border-bottom-right-radius: calc((--value(integer) * -1 * 100) / var(--device-width) * 1vw);
}

@utility srounded-bl-* {
	border-bottom-left-radius: calc((--value(integer) * 100) / var(--device-width) * 1vw);
}
@utility -srounded-bl-* {
	border-bottom-left-radius: calc((--value(integer) * -1 * 100) / var(--device-width) * 1vw);
}

@utility sw-* {
	width: calc((--value(integer) * 100) / var(--device-width) * 1vw);
}
@utility -sw-* {
	width: calc((--value(integer) * -1 * 100) / var(--device-width) * 1vw);
}

@utility smin-w-* {
	min-width: calc((--value(integer) * 100) / var(--device-width) * 1vw);
}
@utility -smin-w-* {
	min-width: calc((--value(integer) * -1 * 100) / var(--device-width) * 1vw);
}

@utility smax-w-* {
	max-width: calc((--value(integer) * 100) / var(--device-width) * 1vw);
}
@utility -smax-w-* {
	max-width: calc((--value(integer) * -1 * 100) / var(--device-width) * 1vw);
}

@utility sh-* {
	height: calc((--value(integer) * 100) / var(--device-width) * 1vw);
}
@utility -sh-* {
	height: calc((--value(integer) * -1 * 100) / var(--device-width) * 1vw);
}

@utility smin-h-* {
	min-height: calc((--value(integer) * 100) / var(--device-width) * 1vw);
}
@utility -smin-h-* {
	min-height: calc((--value(integer) * -1 * 100) / var(--device-width) * 1vw);
}

@utility smax-h-* {
	max-height: calc((--value(integer) * 100) / var(--device-width) * 1vw);
}
@utility -smax-h-* {
	max-height: calc((--value(integer) * -1 * 100) / var(--device-width) * 1vw);
}

@utility sgap-* {
	gap: calc((--value(integer) * 100) / var(--device-width) * 1vw);
}
@utility -sgap-* {
	gap: calc((--value(integer) * -1 * 100) / var(--device-width) * 1vw);
}

@utility sgap-x-* {
	column-gap: calc((--value(integer) * 100) / var(--device-width) * 1vw);
}
@utility -sgap-x-* {
	column-gap: calc((--value(integer) * -1 * 100) / var(--device-width) * 1vw);
}

@utility sgap-y-* {
	row-gap: calc((--value(integer) * 100) / var(--device-width) * 1vw);
}
@utility -sgap-y-* {
	row-gap: calc((--value(integer) * -1 * 100) / var(--device-width) * 1vw);
}

@utility sp-* {
	padding: calc((--value(integer) * 100) / var(--device-width) * 1vw);
}
@utility -sp-* {
	padding: calc((--value(integer) * -1 * 100) / var(--device-width) * 1vw);
}

@utility spx-* {
	padding-inline: calc((--value(integer) * 100) / var(--device-width) * 1vw);
}
@utility -spx-* {
	padding-inline: calc((--value(integer) * -1 * 100) / var(--device-width) * 1vw);
}

@utility spy-* {
	padding-block: calc((--value(integer) * 100) / var(--device-width) * 1vw);
}
@utility -spy-* {
	padding-block: calc((--value(integer) * -1 * 100) / var(--device-width) * 1vw);
}

@utility spt-* {
	padding-top: calc((--value(integer) * 100) / var(--device-width) * 1vw);
}
@utility -spt-* {
	padding-top: calc((--value(integer) * -1 * 100) / var(--device-width) * 1vw);
}

@utility spr-* {
	padding-right: calc((--value(integer) * 100) / var(--device-width) * 1vw);
}
@utility -spr-* {
	padding-right: calc((--value(integer) * -1 * 100) / var(--device-width) * 1vw);
}

@utility spl-* {
	padding-left: calc((--value(integer) * 100) / var(--device-width) * 1vw);
}
@utility -spl-* {
	padding-left: calc((--value(integer) * -1 * 100) / var(--device-width) * 1vw);
}

@utility spb-* {
	padding-bottom: calc((--value(integer) * 100) / var(--device-width) * 1vw);
}
@utility -spb-* {
	padding-bottom: calc((--value(integer) * -1 * 100) / var(--device-width) * 1vw);
}

@utility sm-* {
	margin: calc((--value(integer) * 100) / var(--device-width) * 1vw);
}
@utility -sm-* {
	margin: calc((--value(integer) * -1 * 100) / var(--device-width) * 1vw);
}

@utility smx-* {
	margin-inline: calc((--value(integer) * 100) / var(--device-width) * 1vw);
}
@utility -smx-* {
	margin-inline: calc((--value(integer) * -1 * 100) / var(--device-width) * 1vw);
}

@utility smy-* {
	margin-block: calc((--value(integer) * 100) / var(--device-width) * 1vw);
}
@utility -smy-* {
	margin-block: calc((--value(integer) * -1 * 100) / var(--device-width) * 1vw);
}

@utility smt-* {
	margin-top: calc((--value(integer) * 100) / var(--device-width) * 1vw);
}
@utility -smt-* {
	margin-top: calc((--value(integer) * -1 * 100) / var(--device-width) * 1vw);
}

@utility smr-* {
	margin-right: calc((--value(integer) * 100) / var(--device-width) * 1vw);
}
@utility -smr-* {
	margin-right: calc((--value(integer) * -1 * 100) / var(--device-width) * 1vw);
}

@utility sml-* {
	margin-left: calc((--value(integer) * 100) / var(--device-width) * 1vw);
}
@utility -sml-* {
	margin-left: calc((--value(integer) * -1 * 100) / var(--device-width) * 1vw);
}

@utility smb-* {
	margin-bottom: calc((--value(integer) * 100) / var(--device-width) * 1vw);
}
@utility -smb-* {
	margin-bottom: calc((--value(integer) * -1 * 100) / var(--device-width) * 1vw);
}

@utility stop-* {
	top: calc((--value(integer) * 100) / var(--device-width) * 1vw);
}
@utility -stop-* {
	top: calc((--value(integer) * -1 * 100) / var(--device-width) * 1vw);
}

@utility sright-* {
	right: calc((--value(integer) * 100) / var(--device-width) * 1vw);
}
@utility -sright-* {
	right: calc((--value(integer) * -1 * 100) / var(--device-width) * 1vw);
}

@utility sbottom-* {
	bottom: calc((--value(integer) * 100) / var(--device-width) * 1vw);
}
@utility -sbottom-* {
	bottom: calc((--value(integer) * -1 * 100) / var(--device-width) * 1vw);
}

@utility sleft-* {
	left: calc((--value(integer) * 100) / var(--device-width) * 1vw);
}
@utility -sleft-* {
	left: calc((--value(integer) * -1 * 100) / var(--device-width) * 1vw);
}

@utility sinset-* {
	inset: calc((--value(integer) * 100) / var(--device-width) * 1vw);
}
@utility -sinset-* {
	inset: calc((--value(integer) * -1 * 100) / var(--device-width) * 1vw);
}

@utility sinset-x-* {
	inset-inline: calc((--value(integer) * 100) / var(--device-width) * 1vw);
}
@utility -sinset-x-* {
	inset-inline: calc((--value(integer) * -1 * 100) / var(--device-width) * 1vw);
}

@utility sinset-y-* {
	inset-block: calc((--value(integer) * 100) / var(--device-width) * 1vw);
}
@utility -sinset-y-* {
	inset-block: calc((--value(integer) * -1 * 100) / var(--device-width) * 1vw);
}

@utility w-col-* {
	width: calc((--value(integer) * var(--column-width)) + ((--value(integer) - 1) * var(--gap)));
}
@utility -w-col-* {
	width: calc((--value(integer) * -1 * var(--column-width)) + ((--value(integer) - 1) * var(--gap)));
}

@utility min-w-col-* {
	min-width: calc((--value(integer) * var(--column-width)) + ((--value(integer) - 1) * var(--gap)));
}
@utility -min-w-col-* {
	min-width: calc((--value(integer) * -1 * var(--column-width)) + ((--value(integer) - 1) * var(--gap)));
}

@utility max-w-col-* {
	max-width: calc((--value(integer) * var(--column-width)) + ((--value(integer) - 1) * var(--gap)));
}
@utility -max-w-col-* {
	max-width: calc((--value(integer) * -1 * var(--column-width)) + ((--value(integer) - 1) * var(--gap)));
}

@utility h-col-* {
	height: calc((--value(integer) * var(--column-width)) + ((--value(integer) - 1) * var(--gap)));
}
@utility -h-col-* {
	height: calc((--value(integer) * -1 * var(--column-width)) + ((--value(integer) - 1) * var(--gap)));
}

@utility min-h-col-* {
	min-height: calc((--value(integer) * var(--column-width)) + ((--value(integer) - 1) * var(--gap)));
}
@utility -min-h-col-* {
	min-height: calc((--value(integer) * -1 * var(--column-width)) + ((--value(integer) - 1) * var(--gap)));
}

@utility max-h-col-* {
	max-height: calc((--value(integer) * var(--column-width)) + ((--value(integer) - 1) * var(--gap)));
}
@utility -max-h-col-* {
	max-height: calc((--value(integer) * -1 * var(--column-width)) + ((--value(integer) - 1) * var(--gap)));
}

@utility gap-col-* {
	gap: calc((--value(integer) * var(--column-width)) + ((--value(integer) - 1) * var(--gap)));
}
@utility -gap-col-* {
	gap: calc((--value(integer) * -1 * var(--column-width)) + ((--value(integer) - 1) * var(--gap)));
}

@utility gap-x-col-* {
	column-gap: calc((--value(integer) * var(--column-width)) + ((--value(integer) - 1) * var(--gap)));
}
@utility -gap-x-col-* {
	column-gap: calc((--value(integer) * -1 * var(--column-width)) + ((--value(integer) - 1) * var(--gap)));
}

@utility gap-y-col-* {
	row-gap: calc((--value(integer) * var(--column-width)) + ((--value(integer) - 1) * var(--gap)));
}
@utility -gap-y-col-* {
	row-gap: calc((--value(integer) * -1 * var(--column-width)) + ((--value(integer) - 1) * var(--gap)));
}

@utility p-col-* {
	padding: calc((--value(integer) * var(--column-width)) + ((--value(integer) - 1) * var(--gap)));
}
@utility -p-col-* {
	padding: calc((--value(integer) * -1 * var(--column-width)) + ((--value(integer) - 1) * var(--gap)));
}

@utility px-col-* {
	padding-inline: calc((--value(integer) * var(--column-width)) + ((--value(integer) - 1) * var(--gap)));
}
@utility -px-col-* {
	padding-inline: calc((--value(integer) * -1 * var(--column-width)) + ((--value(integer) - 1) * var(--gap)));
}

@utility py-col-* {
	padding-block: calc((--value(integer) * var(--column-width)) + ((--value(integer) - 1) * var(--gap)));
}
@utility -py-col-* {
	padding-block: calc((--value(integer) * -1 * var(--column-width)) + ((--value(integer) - 1) * var(--gap)));
}

@utility pt-col-* {
	padding-top: calc((--value(integer) * var(--column-width)) + ((--value(integer) - 1) * var(--gap)));
}
@utility -pt-col-* {
	padding-top: calc((--value(integer) * -1 * var(--column-width)) + ((--value(integer) - 1) * var(--gap)));
}

@utility pr-col-* {
	padding-right: calc((--value(integer) * var(--column-width)) + ((--value(integer) - 1) * var(--gap)));
}
@utility -pr-col-* {
	padding-right: calc((--value(integer) * -1 * var(--column-width)) + ((--value(integer) - 1) * var(--gap)));
}

@utility pl-col-* {
	padding-left: calc((--value(integer) * var(--column-width)) + ((--value(integer) - 1) * var(--gap)));
}
@utility -pl-col-* {
	padding-left: calc((--value(integer) * -1 * var(--column-width)) + ((--value(integer) - 1) * var(--gap)));
}

@utility pb-col-* {
	padding-bottom: calc((--value(integer) * var(--column-width)) + ((--value(integer) - 1) * var(--gap)));
}
@utility -pb-col-* {
	padding-bottom: calc((--value(integer) * -1 * var(--column-width)) + ((--value(integer) - 1) * var(--gap)));
}

@utility m-col-* {
	margin: calc((--value(integer) * var(--column-width)) + ((--value(integer) - 1) * var(--gap)));
}
@utility -m-col-* {
	margin: calc((--value(integer) * -1 * var(--column-width)) + ((--value(integer) - 1) * var(--gap)));
}

@utility mx-col-* {
	margin-inline: calc((--value(integer) * var(--column-width)) + ((--value(integer) - 1) * var(--gap)));
}
@utility -mx-col-* {
	margin-inline: calc((--value(integer) * -1 * var(--column-width)) + ((--value(integer) - 1) * var(--gap)));
}

@utility my-col-* {
	margin-block: calc((--value(integer) * var(--column-width)) + ((--value(integer) - 1) * var(--gap)));
}
@utility -my-col-* {
	margin-block: calc((--value(integer) * -1 * var(--column-width)) + ((--value(integer) - 1) * var(--gap)));
}

@utility mt-col-* {
	margin-top: calc((--value(integer) * var(--column-width)) + ((--value(integer) - 1) * var(--gap)));
}
@utility -mt-col-* {
	margin-top: calc((--value(integer) * -1 * var(--column-width)) + ((--value(integer) - 1) * var(--gap)));
}

@utility mr-col-* {
	margin-right: calc((--value(integer) * var(--column-width)) + ((--value(integer) - 1) * var(--gap)));
}
@utility -mr-col-* {
	margin-right: calc((--value(integer) * -1 * var(--column-width)) + ((--value(integer) - 1) * var(--gap)));
}

@utility ml-col-* {
	margin-left: calc((--value(integer) * var(--column-width)) + ((--value(integer) - 1) * var(--gap)));
}
@utility -ml-col-* {
	margin-left: calc((--value(integer) * -1 * var(--column-width)) + ((--value(integer) - 1) * var(--gap)));
}

@utility mb-col-* {
	margin-bottom: calc((--value(integer) * var(--column-width)) + ((--value(integer) - 1) * var(--gap)));
}
@utility -mb-col-* {
	margin-bottom: calc((--value(integer) * -1 * var(--column-width)) + ((--value(integer) - 1) * var(--gap)));
}

@utility top-col-* {
	top: calc((--value(integer) * var(--column-width)) + ((--value(integer) - 1) * var(--gap)));
}
@utility -top-col-* {
	top: calc((--value(integer) * -1 * var(--column-width)) + ((--value(integer) - 1) * var(--gap)));
}

@utility right-col-* {
	right: calc((--value(integer) * var(--column-width)) + ((--value(integer) - 1) * var(--gap)));
}
@utility -right-col-* {
	right: calc((--value(integer) * -1 * var(--column-width)) + ((--value(integer) - 1) * var(--gap)));
}

@utility bottom-col-* {
	bottom: calc((--value(integer) * var(--column-width)) + ((--value(integer) - 1) * var(--gap)));
}
@utility -bottom-col-* {
	bottom: calc((--value(integer) * -1 * var(--column-width)) + ((--value(integer) - 1) * var(--gap)));
}

@utility left-col-* {
	left: calc((--value(integer) * var(--column-width)) + ((--value(integer) - 1) * var(--gap)));
}
@utility -left-col-* {
	left: calc((--value(integer) * -1 * var(--column-width)) + ((--value(integer) - 1) * var(--gap)));
}

@utility inset-col-* {
	inset: calc((--value(integer) * var(--column-width)) + ((--value(integer) - 1) * var(--gap)));
}
@utility -inset-col-* {
	inset: calc((--value(integer) * -1 * var(--column-width)) + ((--value(integer) - 1) * var(--gap)));
}

@utility inset-x-col-* {
	inset-inline: calc((--value(integer) * var(--column-width)) + ((--value(integer) - 1) * var(--gap)));
}
@utility -inset-x-col-* {
	inset-inline: calc((--value(integer) * -1 * var(--column-width)) + ((--value(integer) - 1) * var(--gap)));
}

@utility inset-y-col-* {
	inset-block: calc((--value(integer) * var(--column-width)) + ((--value(integer) - 1) * var(--gap)));
}
@utility -inset-y-col-* {
	inset-block: calc((--value(integer) * -1 * var(--column-width)) + ((--value(integer) - 1) * var(--gap)));
}